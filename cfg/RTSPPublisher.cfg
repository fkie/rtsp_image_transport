# coding: utf8
############################################################################
#
# rtsp_image_transport
# Copyright © 2021 Fraunhofer FKIE
# Author: Timo Röhling
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
############################################################################
#
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# IMPORTANT: The following enum values 0...4 must match those in video_codec.h
codec_enum = gen.enum(
    [
        gen.const("H264", int_t, 0, "MPEG-4 AVC"),
        gen.const("H265", int_t, 1, "HEVC (MPEG-H 2)"),
        gen.const("MPEG4", int_t, 2, "MPEG-4 ASP"),
        gen.const("VP8", int_t, 3, "VP8"),
        gen.const("VP9", int_t, 4, "VP9")
    ], "Available video codecs")

# The level encodes which parts of the publisher need to be reinitialized
LVL_CODEC = 1
LVL_SESSION = 2
LVL_SERVER = 4

gen.add("codec", int_t, LVL_SESSION, "Video Codec", 0, 0, 4, edit_method=codec_enum)
gen.add("bit_rate", int_t, LVL_CODEC, "Video stream bitrate (kbit/s)", 1000, 1, 1000000)
gen.add("frame_rate", int_t, LVL_CODEC, "Expected frame rate (fps)", 30, 0, 100)
gen.add("use_hw_encoder", bool_t, LVL_CODEC, "Use NVENC or VAAPI hardware acceleration if possible", True)
gen.add("use_ip_multicast", bool_t, LVL_SESSION, "Use IP multicast for RTP stream", False)
gen.add("udp_packet_size", int_t, LVL_SERVER, "Size limit for UDP packets", 1396, 576, 9000)
gen.add("udp_port", int_t, LVL_SERVER, "Force specific UDP port for RTSP", 0, 0, 65534)

gen.generate("rtsp_image_transport", "RTSPPublisher", "RTSPPublisher")
